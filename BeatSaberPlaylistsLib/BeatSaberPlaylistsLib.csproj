<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net48;net5.0</TargetFrameworks>
    <LangVersion>8.0</LangVersion>
    <Nullable>Enable</Nullable>
    <Configurations>Debug;Release</Configurations>
    <DocumentationFile>BeatSaberPlaylistsLib.xml</DocumentationFile>
    <!--Version should be set in Directory.Build.props-->
    <VersionType>Unofficial</VersionType>
    <CommitHash>local</CommitHash>
    <GitBranch></GitBranch>
    <GitModified></GitModified>
    <PackageId>BeatSaberPlaylistsLib</PackageId>
    <Product>BeatSaberPlaylistsLib</Product>
    <Title>BeatSaberPlaylistsLib</Title>
    <Description>A library to interact with Beat Saber playlists. Use the BeatSaberPlaylistsLib.BeatSaber if this library is being used inside a mod.</Description>
    <Copyright>Copyright © Zingabopp 2021</Copyright>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/Zingabopp/BeatSaberPlaylistsLib</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Zingabopp/BeatSaberPlaylistsLib</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>Beat Saber</PackageTags>
    <!-- Optional: Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>

    <!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Authors>Zingabopp</Authors>
    <Company>Zingabopp</Company>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <DisableCopyToPlugins>true</DisableCopyToPlugins>
    <DisableZipRelease>true</DisableZipRelease>
  </PropertyGroup>
  <ItemGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <SourceRoot Include="$(MSBuildThisFileDirectory)/" />
  </ItemGroup>
  <ItemGroup Condition="'$(ContinuousIntegrationBuild)' == 'True'">
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\Directory.Build.props">
      <Pack>False</Pack>
    </None>
    <None Include="..\Directory.Build.targets">
      <Pack>False</Pack>
    </None>
  </ItemGroup>
  
  <!-- Item Links -->
  <ItemGroup>
    <Compile Include="..\src\**\*.cs" LinkBase="" />
    <EmbeddedResource Include="..\src\Icons\*" LinkBase="Icons" />
    <None Include="..\BeatSaberPlaylistsLib.manifest" Link="BeatSaberPlaylistsLib.manifest">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <!-- End Item Links -->
  <ItemGroup>
    <PackageReference Include="BeatSaberModdingTools.Tasks" Version="1.3.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="System.Drawing.Common" Version="4.7.1" />
  </ItemGroup>

  
  <Target Name="PreBuild" BeforeTargets="BeforeBuild" Condition="'$(NCRUNCH)' != '1'">
    <Error Text="The BeatSaberModdingTools.Tasks nuget package doesn't seem to be installed." Condition="'$(BSMTTaskAssembly)' == ''" />
    <GetCommitInfo ProjectDir="$(ProjectDir)">
      <Output TaskParameter="CommitHash" PropertyName="CommitHash" />
      <Output TaskParameter="Branch" PropertyName="GitBranch" />
      <Output TaskParameter="IsPullRequest" PropertyName="IsPullRequest" />
      <Output TaskParameter="Modified" PropertyName="GitModified" />
      <Output TaskParameter="GitUser" PropertyName="GitUser" />
    </GetCommitInfo>
    <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true' AND '$(GitUser)' == 'Zingabopp' AND '$(IsPullRequest)' != 'true'">
      <VersionType>Official</VersionType>
    </PropertyGroup>
  </Target>
</Project>
