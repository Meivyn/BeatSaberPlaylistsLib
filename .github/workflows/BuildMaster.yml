name: Build

on:
  push:
    branches: [ master ]
    paths:
      - 'BeatSaberPlaylistsLib/**'
      - 'BeatSaberPlaylistsLib.BeatSaber/**'
      - 'Shared/**'
      - '.github/workflows/BuildMaster.yml'
      - 'Refs/**'
      - 'Directory.Build.*'
  pull_request:
    branches: [ master ]
    paths: 'BeatSaberPlaylistsLib/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: ['Release', 'Release-BeatSaber']
    env:
      Configuration: ${{ matrix.configuration }}
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    steps:
    - uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: GetStrippedRefs
      env:
        FILES_URL: ${{ secrets.BSFILES_URL }}
      run: wget --no-check-certificate "$FILES_URL" -q -O bsfiles.zip
      if: matrix.configuration == 'Release-BeatSaber'
    - name: ExtractRefs
      run: unzip -q -n bsfiles.zip -d ./Refs
      if: matrix.configuration == 'Release-BeatSaber'
    - name: Build ${{ matrix.configuration }}
      id: Build
      env: 
        FrameworkPathOverride: /usr/lib/mono/4.8-api
      run: dotnet build
    - name: Pack ${{ matrix.configuration }}
      id: Pack
      env: 
        FrameworkPathOverride: /usr/lib/mono/4.8-api
      run: dotnet pack
    - name: Upload Beat Saber Artifact
      uses: actions/upload-artifact@v2
      if: matrix.configuration == 'Release-BeatSaber'
      with:
        name: 'BeatSaberPlaylistsLib_BS'
        path: ${{ steps.Build.outputs.artifactpath }}
    - name: Upload ${{ matrix.configuration }} Nuget
      uses: actions/upload-artifact@v2
      with:
        name: Nuget-${{ steps.Build.outputs.filename }}
        path: ${{ steps.Build.outputs.projectdir }}bin/${{ matrix.configuration }}/*pkg
